server.port=8090
#server.port=443
#server.ssl.key-store=3447096_edu.siwonet.com.pfx
#server.ssl.key-store-password=7N8Y5XTf
#server.ssl.key-store-type=JKS


spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/educloud?useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBachedStatements=true&allowPublicKeyRetrieval=true
#连接本地2.0数据库
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/educloud2.0?useUnicode=true&characterEncoding=UTF8&useSSL=false&serverTimezone=Asia/Shanghai&rewriteBachedStatements=true&allowPublicKeyRetrieval=true

mybatis.mapper-locations=classpath:com/siwo/mappers/*.xml

mybatis.configuration.map-underscore-to-camel-case=true

#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

mybatis.type-aliases-package=com.siwo.model

# 指定数据库，不指定的话会默认自动检测数据库类型
pagehelper.helperDialect=mysql
# 是否启用分页合理化。
# 如果启用，当pagenum<1时，会自动查询第一页的数据，当pagenum>pages时，自动查询最后一页数据；
# 不启用的，以上两种情况都会返回空数据
pagehelper.reasonable=true
# 默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
#pagehelper.supportMethodsArguments=true
# 用于从对象中根据属性名取值，
# 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
# 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
# pagehelper.params=count=countSql

spring.servlet.multipart.max-request-size = -1
spring.servlet.multipart.max-file-size = -1

#设置文件上传超时时间
server.tomcat.connection-timeout = 180000

#spring.mvc.static-path-pattern=/static/**

web.upload-path=C:/myFile/upload/ 
web.front-path=C:/myFile/front
web.siwo-path=C:/myFile/siwo
web.index-path=C:/myFile/index
#web.siya-path=C:/myFile/siya
#设置静态资源访问路径
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path},file:${web.front-path},file:${web.siwo-path},file:${web.index-path}
#覆盖@FeignClient 可以重复使用
spring.main.allow-bean-definition-overriding=true